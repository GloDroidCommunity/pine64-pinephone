From 28c04d764e13884793d468fa74a3c35b6ee12736 Mon Sep 17 00:00:00 2001
From: Roman Stratiienko <r.stratiienko@gmail.com>
Date: Tue, 14 Nov 2023 03:47:47 +0200
Subject: [PATCH 3/3] Revert "HWUI: reset buffer state after MakeCurrent"

Causes OpenGL error with mesa3d/lima.

This reverts commit 4a012f5d3f630b2913df0163f79bf2f584c7c0f0.
Change-Id: I226197bf853b4fb8b617c855736d64d6dd089dfd
Signed-off-by: Roman Stratiienko <r.stratiienko@gmail.com>
---
 .../hwui/pipeline/skia/SkiaOpenGLPipeline.cpp | 33 -------------------
 1 file changed, 33 deletions(-)

diff --git a/libs/hwui/pipeline/skia/SkiaOpenGLPipeline.cpp b/libs/hwui/pipeline/skia/SkiaOpenGLPipeline.cpp
index c4d3f5cedfa8..2a8cb42f7675 100644
--- a/libs/hwui/pipeline/skia/SkiaOpenGLPipeline.cpp
+++ b/libs/hwui/pipeline/skia/SkiaOpenGLPipeline.cpp
@@ -53,8 +53,6 @@ SkiaOpenGLPipeline::~SkiaOpenGLPipeline() {
 }
 
 MakeCurrentResult SkiaOpenGLPipeline::makeCurrent() {
-    bool wasSurfaceless = mEglManager.isCurrent(EGL_NO_SURFACE);
-
     // In case the surface was destroyed (e.g. a previous trimMemory call) we
     // need to recreate it here.
     if (mHardwareBuffer) {
@@ -67,37 +65,6 @@ MakeCurrentResult SkiaOpenGLPipeline::makeCurrent() {
     if (!mEglManager.makeCurrent(mEglSurface, &error)) {
         return MakeCurrentResult::AlreadyCurrent;
     }
-
-    // Make sure read/draw buffer state of default framebuffer is GL_BACK. Vendor implementations
-    // disagree on the draw/read buffer state if the default framebuffer transitions from a surface
-    // to EGL_NO_SURFACE and vice-versa. There was a related discussion within Khronos on this topic.
-    // See https://cvs.khronos.org/bugzilla/show_bug.cgi?id=13534.
-    // The discussion was not resolved with a clear consensus
-    if (error == 0 && wasSurfaceless && mEglSurface != EGL_NO_SURFACE) {
-        GLint curReadFB = 0;
-        GLint curDrawFB = 0;
-        glGetIntegerv(GL_READ_FRAMEBUFFER_BINDING, &curReadFB);
-        glGetIntegerv(GL_DRAW_FRAMEBUFFER_BINDING, &curDrawFB);
-
-        GLint buffer = GL_NONE;
-        glBindFramebuffer(GL_FRAMEBUFFER, 0);
-        glGetIntegerv(GL_DRAW_BUFFER0, &buffer);
-        if (buffer == GL_NONE) {
-            const GLenum drawBuffer = GL_BACK;
-            glDrawBuffers(1, &drawBuffer);
-        }
-
-        glGetIntegerv(GL_READ_BUFFER, &buffer);
-        if (buffer == GL_NONE) {
-            glReadBuffer(GL_BACK);
-        }
-
-        glBindFramebuffer(GL_READ_FRAMEBUFFER, curReadFB);
-        glBindFramebuffer(GL_DRAW_FRAMEBUFFER, curDrawFB);
-
-        GL_CHECKPOINT(LOW);
-    }
-
     return error ? MakeCurrentResult::Failed : MakeCurrentResult::Succeeded;
 }
 
-- 
2.39.2

