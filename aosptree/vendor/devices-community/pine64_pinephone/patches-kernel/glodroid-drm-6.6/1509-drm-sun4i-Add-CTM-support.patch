From a35f46b148987d8b871e3fafc30739121d940a09 Mon Sep 17 00:00:00 2001
From: Roman Stratiienko <r.stratiienko@gmail.com>
Date: Wed, 29 Jan 2025 18:22:17 +0200
Subject: [PATCH] drm/sun4i: Add CTM support

Use TCON Color Enhancement Unit (CEU) to implement CTM.

Change-Id: I30d7d14e70a7231f7d161e197c13e405f9c8688d
Signed-off-by: Roman Stratiienko <r.stratiienko@gmail.com>
---
 drivers/gpu/drm/sun4i/sun4i_crtc.c |  6 +++++
 drivers/gpu/drm/sun4i/sun4i_tcon.c | 38 +++++++++++++++++++++++++++++-
 drivers/gpu/drm/sun4i/sun4i_tcon.h |  2 ++
 3 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/sun4i/sun4i_crtc.c b/drivers/gpu/drm/sun4i/sun4i_crtc.c
index c30dc95ba..f68a027bb 100644
--- a/drivers/gpu/drm/sun4i/sun4i_crtc.c
+++ b/drivers/gpu/drm/sun4i/sun4i_crtc.c
@@ -115,6 +115,12 @@ static void sun4i_crtc_atomic_flush(struct drm_crtc *crtc,
 			sun4i_tcon_enable_gamma(scrtc->tcon, true);
 		} else
 			sun4i_tcon_enable_gamma(scrtc->tcon, false);
+
+		if (crtc->state->ctm) {
+			sun4i_tcon_load_ctm(scrtc->tcon, crtc->state->ctm->data);
+			sun4i_tcon_enable_ctm(scrtc->tcon, true);
+		} else
+			sun4i_tcon_enable_ctm(scrtc->tcon, false);
 	}
 
 }
diff --git a/drivers/gpu/drm/sun4i/sun4i_tcon.c b/drivers/gpu/drm/sun4i/sun4i_tcon.c
index 1a296eeff..3fc62851a 100644
--- a/drivers/gpu/drm/sun4i/sun4i_tcon.c
+++ b/drivers/gpu/drm/sun4i/sun4i_tcon.c
@@ -270,6 +270,42 @@ void sun4i_tcon_enable_gamma(struct sun4i_tcon *tcon, bool enable)
 }
 EXPORT_SYMBOL(sun4i_tcon_enable_gamma);
 
+#define SUN4I_TCON_CEU_MUL_REG		0x110
+#define SUN4I_TCON_CEU_ADD_REG		0x11C
+#define SUN4I_TCON_CEU_RANGE_REG	0x140
+#define SUN4I_TCON_CEU_RANGE_FULL	0x000000ff
+void sun4i_tcon_load_ctm(struct sun4i_tcon *tcon, struct drm_color_ctm *ctm)
+{
+    const u16 coeff_mul_regs[9] = {0, 1, 2, 4, 5, 6, 8, 9, 10};
+    int i;
+
+    for (i = 0; i < 9; i++) {
+        u32 reg_offset = SUN4I_TCON_CEU_MUL_REG + (coeff_mul_regs[i] * 0x04);
+        u32 reg_val = drm_color_ctm_s31_32_to_qm_n(ctm->matrix[i], 4, 8);
+	reg_val &= GENMASK(12, 0);
+
+        regmap_write(tcon->regs, reg_offset, reg_val);
+    }
+
+    for (i = 0; i < 3; i++) {
+	u32 reg_offset = SUN4I_TCON_CEU_ADD_REG + (i * 0x10);
+	regmap_write(tcon->regs, reg_offset, 0);
+	reg_offset = SUN4I_TCON_CEU_RANGE_REG + (i * 0x04);
+	regmap_write(tcon->regs, reg_offset, SUN4I_TCON_CEU_RANGE_FULL);
+    }
+}
+EXPORT_SYMBOL(sun4i_tcon_load_ctm);
+
+#define SUN4I_TCON_CEU_EN_REG	0x100
+#define SUN4I_TCON_CEU_EN_BIT	BIT(31)
+void sun4i_tcon_enable_ctm(struct sun4i_tcon *tcon, bool enable)
+{
+	regmap_update_bits(tcon->regs, SUN4I_TCON_CEU_EN_REG,
+			   SUN4I_TCON_CEU_EN_BIT,
+			   enable ? SUN4I_TCON_CEU_EN_BIT : 0);
+}
+EXPORT_SYMBOL(sun4i_tcon_enable_ctm);
+
 /*
  * This function is a helper for TCON output muxing. The TCON output
  * muxing control register in earlier SoCs (without the TCON TOP block)
@@ -1321,7 +1357,7 @@ static int sun4i_tcon_bind(struct device *dev, struct device *master,
 
 	drm_mode_crtc_set_gamma_size(&tcon->crtc->crtc,
 				     SUN4I_TCON_GAMMA_LUT_SIZE);
-	drm_crtc_enable_color_mgmt(&tcon->crtc->crtc, 0, false,
+	drm_crtc_enable_color_mgmt(&tcon->crtc->crtc, 0, true,
 				   tcon->crtc->crtc.gamma_size);
 
 	return 0;
diff --git a/drivers/gpu/drm/sun4i/sun4i_tcon.h b/drivers/gpu/drm/sun4i/sun4i_tcon.h
index 745e1c473..42b0217bb 100644
--- a/drivers/gpu/drm/sun4i/sun4i_tcon.h
+++ b/drivers/gpu/drm/sun4i/sun4i_tcon.h
@@ -308,6 +308,8 @@ void sun4i_tcon_set_status(struct sun4i_tcon *crtc,
 void sun4i_tcon_load_gamma_lut(struct sun4i_tcon *tcon,
 			       struct drm_color_lut *lut);
 void sun4i_tcon_enable_gamma(struct sun4i_tcon *tcon, bool enable);
+void sun4i_tcon_load_ctm(struct sun4i_tcon *tcon, struct drm_color_ctm *ctm);
+void sun4i_tcon_enable_ctm(struct sun4i_tcon *tcon, bool enable);
 
 extern const struct of_device_id sun4i_tcon_of_table[];
 
-- 
2.43.0

